---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: proxmox-cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:proxmox-cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: proxmox-cloud-controller-manager
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cloud-controller-manager
  name: cloud-controller-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: cloud-controller-manager
    spec:
      serviceAccountName: proxmox-cloud-controller-manager
      containers:
      - name: cloud-controller-manager
        image: spyduck/cloud-provider-proxmox:latest
        command:
        - /usr/local/bin/cloud-controller-manager
        - --cloud-provider=proxmox
        - --cloud-config=/etc/proxmox/config.yaml
        - --leader-elect=true
        - --use-service-account-credentials
        - --controllers=cloud-node,cloud-node-lifecycle
        volumeMounts:
          - name: cloud-config
            mountPath: /etc/proxmox
            readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10258
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 30
          timeoutSeconds: 5
      volumes:
        - name: cloud-config
          secret:
            secretName: cloud-config
      tolerations:
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: cloud-config
  namespace: kube-system
data:
  config.yaml: <base64 encoded yaml>
      